[{"/Users/tanlei/Desktop/React_echarts/src/index.js":"1","/Users/tanlei/Desktop/React_echarts/src/reportWebVitals.js":"2","/Users/tanlei/Desktop/React_echarts/src/App.js":"3","/Users/tanlei/Desktop/React_echarts/src/views/index.js":"4","/Users/tanlei/Desktop/React_echarts/src/components/BottomEcharts.jsx":"5","/Users/tanlei/Desktop/React_echarts/src/components/TopEcharts.jsx":"6","/Users/tanlei/Desktop/React_echarts/src/components/base.js":"7"},{"size":500,"mtime":1612163811340,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1612163811340,"results":"10","hashOfConfig":"9"},{"size":292,"mtime":1612230050262,"results":"11","hashOfConfig":"9"},{"size":8718,"mtime":1612232569393,"results":"12","hashOfConfig":"9"},{"size":7019,"mtime":1612248443319,"results":"13","hashOfConfig":"9"},{"size":7059,"mtime":1612243473123,"results":"14","hashOfConfig":"9"},{"size":91829,"mtime":1612172648782,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xlejvv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tanlei/Desktop/React_echarts/src/index.js",[],["34","35"],"/Users/tanlei/Desktop/React_echarts/src/reportWebVitals.js",[],"/Users/tanlei/Desktop/React_echarts/src/App.js",[],"/Users/tanlei/Desktop/React_echarts/src/views/index.js",["36"],"import TopEcharts from '../components/TopEcharts'\nimport BottomEcharts from '../components/BottomEcharts'\nimport React, {\n\tuseEffect,\n\tuseState\n} from 'react';\n\n\n\nconst Echarts = () => {\n  const [flag,setFlag] = useState(true)\n  const items = [{\n    symbol: \"\",\n    name: \"市监狱局\",\n    pointType: \"point\",\n    belong: \"南开区\",\n    // pointColor: 'rgba(217, 0, 27, 1)', // 球颜色\n    // lineStyle: {\n    //   color: 'red', // 线颜色\n    // },\n    // effect: {\n    //   period: 2, // 箭头快慢\n    //   symbolSize: [6, 20], // 箭头大小\n    // },\n  },\n  {\n    symbol: \"\",\n    name: \"南开区政府\",\n    pointType: \"point\",\n    belong: \"南开区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市税务局\",\n    pointType: \"point\",\n    belong: \"河北区\",\n  },\n  {\n    symbol: \"\",\n    name: \"河北区政府\",\n    pointType: \"point\",\n    belong: \"河北区\",\n    label: {\n            show: true,\n            offset: [15, 10]\n        }\n  },\n  {\n    symbol: \"\",\n    name: \"市公安局\",\n    pointType: \"point\",\n    belong: \"西青区\",\n  },\n  {\n    symbol: \"\",\n    name: \"西青区政府\",\n    pointType: \"point\",\n    belong: \"西青区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市税务局数据中心\",\n    pointType: \"point\",\n    belong: \"空港IDC\",\n  },\n  {\n    symbol: \"\",\n    name: \"空港数据中心\",\n    pointType: \"point\",\n    belong: \"空港IDC\",\n  },\n  {\n    symbol: \"\",\n    name: \"武清区政府\",\n    pointType: \"point\",\n    belong: \"武清区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市应急局\",\n    pointType: \"point\",\n    belong: \"市电子政务中心\",\n    label: {\n      show: true,\n      offset: [15, 15],\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"市气象局\",\n    pointType: \"point\",\n    belong: \"市电子政务中心\",\n    label: {\n      show: true,\n      offset: [15, 20],\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"市合作交流办\",\n    pointType: \"point\",\n    belong: \"市电子政务中心\",\n    label: {\n      show: true,\n      offset: [15, -15],\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"市交通运输委\",\n    pointType: \"point\",\n    belong: \"市电子政务中心\",\n    label: {\n      show: true,\n      offset: [12, -10],\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"市司法局\",\n    pointType: \"point\",\n    belong: \"市电子政务中心\",\n    label: {\n      show: true,\n      offset: [12, -8],\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"市高法\",\n    pointType: \"point\",\n    belong: \"市电子政务中心\",\n    label: {\n      show: true,\n      offset: [10, -5],\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"东丽区政府\",\n    pointType: \"point\",\n    belong: \"东丽区\",\n  },\n  {\n    symbol: \"\",\n    name: \"宝坻区政府\",\n    pointType: \"point\",\n    belong: \"宝坻区\",\n    label: {\n      show: true,\n      offset: [10, -5],\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"市科技局\",\n    pointType: \"point\",\n    belong: \"和平区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市统计局\",\n    pointType: \"point\",\n    belong: \"和平区\",\n  },\n  {\n    symbol: \"\",\n    name: \"和平区政府\",\n    pointType: \"point\",\n    belong: \"和平区\",\n  },\n  {\n    symbol: \"\",\n    name: \"蓟州区政府\",\n    pointType: \"point\",\n    belong: \"蓟州区\",\n  },\n  {\n    symbol: \"\",\n    name: \"河东区政府\",\n    pointType: \"point\",\n    belong: \"河东区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市人防办\",\n    pointType: \"point\",\n    belong: \"河东区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市粮食和物资储备局\",\n    pointType: \"point\",\n    belong: \"河东区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市场监管委\",\n    pointType: \"point\",\n    belong: \"河东区\",\n  },\n  {\n    symbol: \"\",\n    name: \"河西区政府\",\n    pointType: \"point\",\n    belong: \"河西区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市戒毒局\",\n    pointType: \"point\",\n    belong: \"河西区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市安全局\",\n    pointType: \"point\",\n    belong: \"河西区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市农委\",\n    pointType: \"point\",\n    belong: \"河西区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市文旅局\",\n    pointType: \"point\",\n    belong: \"河西区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市纪检委\",\n    pointType: \"point\",\n    belong: \"河西区\",\n  },\n  {\n    symbol: \"\",\n    name: \"静海区政府\",\n    pointType: \"point\",\n    belong: \"静海区\",\n  },\n  {\n    symbol: \"\",\n    name: \"北辰区政府\",\n    pointType: \"point\",\n    belong: \"北辰区\",\n  },\n  {\n    symbol: \"\",\n    name: \"红桥区政府\",\n    pointType: \"point\",\n    belong: \"红桥区\",\n  },\n  {\n    symbol: \"\",\n    name: \"滨海新区政府\",\n    pointType: \"point\",\n    belong: \"滨海新区\",\n  },\n  {\n    symbol: \"\",\n    name: \"宁河区政府\",\n    pointType: \"point\",\n    belong: \"宁河区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市医保局\",\n    pointType: \"point\",\n    belong: \"烟台道联通机房\",\n  },\n  {\n    symbol: \"\",\n    name: \"市信访办\",\n    pointType: \"point\",\n    belong: \"烟台道联通机房\",\n  },\n  {\n    symbol: \"\",\n    name: \"市住建局\",\n    pointType: \"point\",\n    belong: \"烟台道联通机房\",\n  },\n  {\n    symbol: \"\",\n    name: \"市商务局\",\n    pointType: \"point\",\n    belong: \"烟台道联通机房\",\n  },\n  {\n    symbol: \"\",\n    name: \"市编办\",\n    pointType: \"point\",\n    belong: \"市政府\",\n  },\n  {\n    symbol: \"\",\n    name: \"市机要局\",\n    pointType: \"point\",\n    belong: \"市政府\",\n  },\n  {\n    symbol: \"\",\n    name: \"市政府办公厅\",\n    pointType: \"point\",\n    belong: \"市政府\",\n  },\n  {\n    symbol: \"\",\n    name: \"市委网信办\",\n    pointType: \"point\",\n    belong: \"市政府\",\n  },\n  {\n    symbol: \"\",\n    name: \"市委办公厅\",\n    pointType: \"point\",\n    belong: \"市政府\",\n  },\n  {\n    symbol: \"\",\n    name: \"市财政局数据中心\",\n    pointType: \"point\",\n    belong: \"市人大\",\n  },\n  {\n    symbol: \"\",\n    name: \"市政协办公厅\",\n    pointType: \"point\",\n    belong: \"市政协\",\n  },\n  {\n    symbol: \"\",\n    name: \"津南区政府\",\n    pointType: \"point\",\n    belong: \"津南区\",\n  },\n  {\n    symbol: \"\",\n    name: \"市人大办公厅\",\n    pointType: \"point\",\n    belong: \"津南区\",\n  },\n  {\n    symbol: \"\",\n    name: \"华苑数据中心\",\n    pointType: \"point\",\n    belong: \"华苑IDC\",\n  },\n  {\n    symbol: \"\",\n    name: \"市民政局\",\n    pointType: \"point\",\n    belong: \"华苑IDC\",\n  },\n  {\n    symbol: \"\",\n    name: \"市审计局\",\n    pointType: \"point\",\n    belong: \"科技信息所\",\n    effect: {\n      // period: 4,\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"市国资委\",\n    pointType: \"point\",\n    belong: \"科技信息所\",\n  },\n  {\n    symbol: \"\",\n    name: \"南开区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"河北区\",\n    pointType: \"cloud\",\n    lineStyle: {\n      color: 'red', // 线颜色\n    },\n  },\n  {\n    symbol: \"\",\n    name: \"西青区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"空港IDC\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"武清区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"市电子政务中心\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"东丽区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"宝坻区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"和平区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"蓟州区\",\n    pointType: \"cloud\",\n  },\n  {\n    level: 4,\n    symbol: \"\",\n    name: \"河东区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"河西区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"静海区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"北辰区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"红桥区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"滨海新区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"宁河区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"烟台道联通机房\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"市政府\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"市人大\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"市政协\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"津南区\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"华苑IDC\",\n    pointType: \"cloud\",\n  },\n  {\n    symbol: \"\",\n    name: \"科技信息所\",\n    pointType: \"cloud\",\n    effect: {\n      // period: 2,\n      // symbolSize: [8, 24],\n    },\n  },\n  ]\n\n\n\n  return (\n    <div style={{position:'relative',background:'#000'}}>\n      <BottomEcharts item = {items} flag= {flag}/>\n      <TopEcharts items = {items} setFlag={setFlag}/>\n    </div>\n  )\n}\n\n\nexport default  Echarts","/Users/tanlei/Desktop/React_echarts/src/components/BottomEcharts.jsx",["37","38","39","40","41","42","43","44","45"],"import React, {\n\tuseEffect,\n\tuseState\n} from 'react';\nimport {cloud,point} from './base'\n\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/lines';\nimport 'echarts/lib/chart/graph';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n\nconst  BottomEcharts = (props) => {\n  const {item,flag} = props\n  let items = Object.assign([],item)\n  let [dataArrs, allArrs, erArrs, sanArrs,circleLinesArrs,orientationsArrs] = [[],[],[],[],[],[]];\n    // 点\n    items.forEach((el, index) => {\n    if (el.pointType === \"cloud\") {\n      // 云\n      // el.symbol = cloud\n      // el.symbolSize = [30, 30];\n      erArrs.push(el);\n      // console.log('erArrs', erArrs)\n    } else if (el.pointType === \"point\") {\n      // 球\n      // el.symbol = point\n      // el.symbolSize = [30, 30];\n      if (el.belong && !items.some((iteP) => el.belong === iteP.name)) {\n        items.splice(index, 1);\n      } else {\n        sanArrs.push(el);\n      }\n      // console.log('sanArrs', sanArrs)\n    }\n    if (!el.belong) {\n      el.children = [];\n      items.forEach((es) => {\n        if (es.belong === el.name) {\n          el.children.push(es);\n        }\n      });\n      allArrs.push(el);\n    }\n  });\n\n  // 圆形分区\n  function groups(arr, r) {\n    const newArray = [];\n    const { length: arLen} = arr;\n    // console.log('arr :>> ', arr);\n    // console.log('arLen :>> ', arLen);\n    arr.forEach((e, index) => {\n      // console.log('e', e)\n      // console.log('index', index)\n      // 按角度均匀分布\n      let ang = 180 - (180 / (arLen-1)).toFixed(4) * (index);\n      // console.log('ang :>> ', ang);\n      const x = (Math.cos(ang * Math.PI / 180)).toFixed(4) * r;\n      const y = (Math.sin(ang * Math.PI / 180)).toFixed(4) * r;\n      e.value = [x.toFixed(4), y.toFixed(4)];\n  /*     if (e.belong) {\n        let rotate = '';\n        const angle = (180 / arr.length).toFixed(4);\n        // console.log('angle :>> ', angle);\n        \n        if (x > 0 && y >= 0) {\n          rotate = (r - angle * (index-1)).toFixed(4);\n          // rotate = (90 - 360 / arr.length * (index + 1)).toFixed(4);\n        } else if (x <= 0 && y > 0) {\n          rotate = (-r + angle * (arr.length - index + 1)).toFixed(4);\n        } else if (x < 0 && y <= 0) {\n          rotate = (r - angle * (index - arr.length * 0.5)).toFixed(4);\n        } else if (x >= 0 && y < 0) {\n          rotate = (-8 + angle * (arr.length * 0.25 - index -1)).toFixed(4);\n        }\n        e.label = {\n          // show: true,\n          width: 200,\n          color: {\n            lineColor: {\n              color: \"rgb(24,163,239)\",\n            },\n          },\n          rotate,\n          align: x > 0 ? 'left' : 'right',\n          padding: x > 0 ? [0, 0, 0, 16] : [0, 16, 0, 0],\n        };\n      } */\n      newArray.push(e);\n    });\n    // console.log('newArray', newArray)\n    return newArray;\n  }\n  // 线配置\n  function linesConfigs(arr) {\n    const [dataArrs, targetCoord] = [ [], [0, 0] ];\n    arr.forEach((el) => {\n      // console.log('el', el)\n      if (!el.belong) {\n        dataArrs.push([{\n          coord: targetCoord\n        },\n        {\n          coord: el.value,\n          // lineStyle: el.lineStyle,\n          effect: {\n            symbolSize: [4, 16], // 动画的大小\n            period: 6, // 时间快慢\n            delay: 2, // 延时计算\n            ...el.effect,\n          },\n        },\n        ]);\n        arr.forEach((element) => {\n          if (element.belong === el.name) {\n            dataArrs.push([{\n              coord: el.value\n            },\n            {\n              coord: element.value,\n              lineStyle: element.lineStyle,\n              effect: {\n                symbolSize: [4, 8], // 动画的大小\n                period: 6, // 时间快慢\n                delay: 2, // 延时计算\n                ...element.effect,\n              },\n            }\n            ]);\n          }\n        });\n      }\n    });\n    // console.log('dataArrs=====', dataArrs)\n    return dataArrs;\n  }\n  //环形线绘制\n  function circleLines(erArrs,sanArrs) {\n    let arr = []\n    erArrs.map((i,v) => {\n      if (v<erArrs.length-1) {\n        circleLinesArrs.push({source:i.name,target:erArrs[v+1].name})\n      }else{\n        // circleLinesArrs.push({source:erArrs[v].name,target:erArrs[0].name})\n      }\n    })\n    sanArrs.map((i,v) => {\n      if (v<sanArrs.length-1) {\n        circleLinesArrs.push({source:i.name,target:sanArrs[v+1].name})\n      }else{\n        // circleLinesArrs.push({source:sanArrs[v].name,target:sanArrs[0].name})\n      }\n    })\n    return circleLinesArrs\n  }\n  //关系指向\n  function  orientations(allArrs) {\n    // console.log('allArrs', allArrs)\n    allArrs.map((i,v) => {\n      allArrs.map((o,p) => {\n        if (i.belong === o.name) {\n          orientationsArrs.push({source:o.name,target:i.name})\n        }\n      })\n    })\n    // console.log('orientationsArrs', orientationsArrs)\n    return orientationsArrs\n  }\n  // 点分布\n  erArrs = groups(erArrs, 35);\n  // console.log('erArrs', erArrs)\n  sanArrs = groups(sanArrs, 70);\n  allArrs = [...erArrs, ...sanArrs];\n  // 线坐标和配置\n  dataArrs = linesConfigs(allArrs);\n  circleLinesArrs = circleLines(erArrs,sanArrs)\n  orientationsArrs = orientations(allArrs)\n\tuseEffect(() => {\n\t\tconst myChart = echarts.init(document.getElementById('lines'));\n\t\tconst option = {\n\t\t\tbackgroundColor: 'rgba(0,0,0,1)',\n\t\t\txAxis: {\n\t\t\t\tshow: false,\n\t\t\t\ttype: \"value\",\n\t\t\t\tmax: 75,\n\t\t\t\tmin: -75,\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\ttop: 50,\n\t\t\t\tbottom: 50,\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\tshow: false,\n\t\t\t\ttype: \"value\",\n\t\t\t\tmax: 75,\n\t\t\t\tmin: -75,\n\t\t\t},\n\t\t\tseries: [\n\t\t\t{\n\t\t\t\tname: \"\",\n\t\t\t\ttype: \"lines\",\n\t\t\t\tcoordinateSystem: \"cartesian2d\",\n\t\t\t\tpolyline: true,\n\t\t\t\tz: 1,\n\t\t\t\tlineStyle: {\n\t\t\t\t\twidth: 2,\n\t\t\t\t\tcolor: '#99CCCC',\n\t\t\t\t\tcurveness: 0,\n\t\t\t\t},\n\t\t\t\teffect: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tsmooth: false,\n\t\t\t\t\ttrailLength: 0, // 拖尾的长度\n\t\t\t\t\tsymbol: 'pin', // 动画的类型\n\t\t\t\t},\n\t\t\t\tdata: dataArrs,\n      },\n      {\n        type: \"graph\",\n        // hoverAnimation: true,\n        coordinateSystem: \"cartesian2d\",\n        // legendHoverLink : true,\n        // roam: true,\n        // focusNodeAdjacency: true,\n        layout : 'circular',\n\t\t\t\tz: 3,\n\t\t\t\titemStyle: {\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tshadowColor: \"none\",\n\t\t\t\t\t},\n\t\t\t\t},\n        data: allArrs,\n        edges: circleLinesArrs\n\t\t\t},\n\t\t\t],\n    }\n    myChart.on('mousemove', function (h) {\n      // console.log('BottomEcharts', h)\n      // setFlag(false)\n      // setbgColor('rgba(0,0,0,1)')\n  });\n    myChart.setOption(option);\n\t\twindow.addEventListener('resize', function () {\n\t\t\tmyChart.resize();\n\t\t})\n\n  }, [])\n  return(\n    <div style={{position:'absolute',top:'0',left:'0',height: '1000px',overflow:'hidden',zIndex:'2',display: flag ?'block':'none'}}>\n      <div id=\"lines\" style={{\twidth: '1800px',height: '1800px',display: flag ?'block':'none'}} ></div>\n    </div>\n  )\n}\n\nexport default BottomEcharts","/Users/tanlei/Desktop/React_echarts/src/components/TopEcharts.jsx",["46","47","48","49","50","51","52","53","54"],"import React, {\n\tuseEffect,\n\tuseState\n} from 'react';\nimport {cloud,point} from './base'\n\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/lines';\nimport 'echarts/lib/chart/graph';\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\n\nconst  BottomEcharts = (props) => {\n  const [bgColor,setbgColor] = useState('rgba(0,0,0,0)')\n  const {items,setFlag} = props\n\n  let [dataArr, allArr, erArr, sanArr,circleLineArr,orientationArr] = [[],[],[],[],[],[]];\n    // 点\n    items.forEach((el, index) => {\n    if (el.pointType === \"cloud\") {\n      // 云\n      el.symbol = cloud\n      el.symbolSize = [30, 30];\n      el.label = {\n        normal: {\n          show: true,\n          position: \"bottom\",\n          borderWidth: 1,\n          borderRadius: 12,\n          padding: [4, 8, 4, 8],\n          distance: 4,\n          color: \"rgb(89,197,238)\",\n          borderColor: \"rgb(89,197,238)\",\n        },\n      };\n      erArr.push(el);\n      // console.log('erArr', erArr)\n    } else if (el.pointType === \"point\") {\n      // 球\n      el.symbol = point\n      el.symbolSize = [25, 25];\n      // el.label = {\n      //   normal: {\n      //     show: true,\n      //     position: \"bottom\",\n      //     borderWidth: 1,\n      //     borderRadius: 12,\n      //     padding: [4, 8, 4, 8],\n      //     distance: 4,\n      //     color: \"rgb(89,197,238)\",\n      //     borderColor: \"rgb(89,197,238)\",\n      //   },\n      // };\n      el.itemStyle = {\n        borderColor: el.pointColor ? el.pointColor : 'rgba(4, 242, 28, 1)',\n        borderWidth: 3,\n        color: \"#0ceffd\",\n      };\n      if (el.belong && !items.some((iteP) => el.belong === iteP.name)) {\n        items.splice(index, 1);\n      } else {\n        sanArr.push(el);\n      }\n      // console.log('sanArr', sanArr)\n    }\n    if (!el.belong) {\n      el.children = [];\n      items.forEach((es) => {\n        if (es.belong === el.name) {\n          el.children.push(es);\n        }\n      });\n      allArr.push(el);\n    }\n  });\n\n  // 圆形分区\n  function group(arr, r) {\n    const newArray = [];\n    const { length: arLen} = arr;\n    arr.forEach((e, index) => {\n      // 按角度均匀分布\n      let ang = 180 - (180 / (arLen-1)).toFixed(4) * (index);\n      const x = (Math.cos(ang * Math.PI / 180)).toFixed(4) * r;\n      const y = (Math.sin(ang * Math.PI / 180)).toFixed(4) * r;\n      e.value = [x.toFixed(4), y.toFixed(4)];\n      if (e.belong) {\n        // :TODO:角度需要重新计算\n        let rotate = '0';\n        const angle = (180 / arr.length).toFixed(4);\n        // if (x > 0 ) {\n        //   rotate = (r - angle * (index-1)).toFixed(4);\n        //   // rotate = (90 - 360 / arr.length * (index + 1)).toFixed(4);\n        // } else if (x <= 0 ) {\n        //   rotate = (-r + angle * (arr.length - index + 1)).toFixed(4);\n        // } \n        e.label = {\n            normal: {\n            show: true,\n            position: \"bottom\",\n            // borderWidth: 1,\n            // borderRadius: 12,\n            // padding: [4, 8, 4, 8],\n            distance: 2,\n            color: \"rgb(89,197,238)\",\n            borderColor: \"rgb(89,197,238)\",\n            // rotate: rotate*0.1,\n            rotate:x > 0 ? ang : -(180 - ang ),\n            align: x > 0 ? 'left' : 'right',\n            padding: x > 0 ? [-15, 13,0, 30] : [-15, 30, 10, 0],//\n          },\n        };\n      }\n      newArray.push(e);\n    });\n    // console.log('newArray :>> ', newArray);\n    return newArray;\n  }\n  // 线配置\n  function linesConfig(arr) {\n    const [dataArr, targetCoord] = [ [], [0, 0] ];\n    arr.forEach((el) => {\n      // console.log('el', el)\n      if (!el.belong) {\n        dataArr.push([{\n          coord: targetCoord\n        },\n        {\n          coord: el.value,\n          // lineStyle: el.lineStyle,\n          effect: {\n            symbolSize: [4, 16], // 动画的大小\n            period: 6, // 时间快慢\n            delay: 2, // 延时计算\n            ...el.effect,\n          },\n        },\n        ]);\n        arr.forEach((element) => {\n          if (element.belong === el.name) {\n            dataArr.push([{\n              coord: el.value\n            },\n            {\n              coord: element.value,\n              lineStyle: element.lineStyle,\n              effect: {\n                symbolSize: [4, 8], // 动画的大小\n                period: 6, // 时间快慢\n                delay: 2, // 延时计算\n                ...element.effect,\n              },\n            }\n            ]);\n          }\n        });\n      }\n    });\n    return dataArr;\n  }\n  //环形线绘制\n  function circleLine(erArr,sanArr) {\n    let arr = []\n    erArr.map((i,v) => {\n      if (v<erArr.length-1) {\n        circleLineArr.push({source:i.name,target:erArr[v+1].name})\n      }else{\n        // circleLineArr.push({source:erArr[v].name,target:erArr[0].name})\n      }\n    })\n    sanArr.map((i,v) => {\n      if (v<sanArr.length-1) {\n        circleLineArr.push({source:i.name,target:sanArr[v+1].name})\n      }else{\n        // circleLineArr.push({source:sanArr[v].name,target:sanArr[0].name})\n      }\n    })\n    return circleLineArr\n  }\n  //关系指向\n  function  orientation(allArr) {\n    allArr.map((i,v) => {\n      allArr.map((o,p) => {\n        if (i.belong === o.name) {\n          orientationArr.push({source:o.name,target:i.name})\n        }\n      })\n    })\n    return orientationArr\n  }\n  // 点分布\n  erArr = group(erArr, 35);\n  sanArr = group(sanArr, 70);\n  allArr = [...erArr, ...sanArr];\n  // 线坐标和配置\n  dataArr = linesConfig(allArr);\n  circleLineArr = circleLine(erArr,sanArr)\n  orientationArr = orientation(allArr)\n  useEffect(() => {\n    const myChart = echarts.init(document.getElementById('graph'));\n\n\t\tconst option = {\n\t\t\txAxis: {\n\t\t\t\tshow: false,\n\t\t\t\ttype: \"value\",\n\t\t\t\tmax: 75,\n\t\t\t\tmin: -75,\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\ttop: 50,\n\t\t\t\tbottom: 50,\n\t\t\t\tleft: 50,\n\t\t\t\tright: 50,\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\tshow: false,\n\t\t\t\ttype: \"value\",\n\t\t\t\tmax: 75,\n\t\t\t\tmin: -75,\n\t\t\t},\n\t\t\tseries: [\n        {\n        type: \"graph\",\n        hoverAnimation: true,\n        coordinateSystem: \"cartesian2d\",\n        legendHoverLink : true,\n        roam: true,\n        focusNodeAdjacency: true,\n        layout : 'circular',\n\t\t\t\tz: 3,\n\t\t\t\titemStyle: {\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tshadowColor: \"none\",\n\t\t\t\t\t},\n\t\t\t\t},\n        data: allArr,\n        edges: orientationArr\n\t\t\t},\n\n\t\t\t],\n\t\t}\n    myChart.setOption(option);\n    myChart.on('click', function (e) {\n      // console.log('e', e)\n  });\n    myChart.on('mousemove', function (h) {\n      setFlag(false)\n      setbgColor('rgba(0,0,0,1)')\n  });\n    myChart.on('mouseout', function (h) {\n      setFlag(true)\n      setbgColor('rgba(0,0,0,0)')\n  });\n\t\twindow.addEventListener('resize', function () {\n\t\t\tmyChart.resize();\n\t\t})\n  }, [])\n  return(\n    <div style={{position:'absolute',top:'0',left:'0',height: '1000px',overflow:'hidden',zIndex:'9'}}>\n      <div id=\"graph\" style={{\twidth: '1800px',height: '1800px',background:bgColor}} ></div>\n    </div>\n  )\n}\n\nexport default BottomEcharts","/Users/tanlei/Desktop/React_echarts/src/components/base.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":2,"nodeType":"61","messageId":"62","endLine":4,"endColumn":11},{"ruleId":"59","severity":1,"message":"63","line":3,"column":2,"nodeType":"61","messageId":"62","endLine":3,"endColumn":10},{"ruleId":"59","severity":1,"message":"64","line":5,"column":9,"nodeType":"61","messageId":"62","endLine":5,"endColumn":14},{"ruleId":"59","severity":1,"message":"65","line":5,"column":15,"nodeType":"61","messageId":"62","endLine":5,"endColumn":20},{"ruleId":"59","severity":1,"message":"66","line":142,"column":9,"nodeType":"61","messageId":"62","endLine":142,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":143,"column":22,"nodeType":"69","messageId":"70","endLine":143,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":150,"column":23,"nodeType":"69","messageId":"70","endLine":150,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":162,"column":23,"nodeType":"69","messageId":"70","endLine":162,"endColumn":25},{"ruleId":"67","severity":1,"message":"68","line":163,"column":25,"nodeType":"69","messageId":"70","endLine":163,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":252,"column":6,"nodeType":"73","endLine":252,"endColumn":8,"suggestions":"74"},{"ruleId":"59","severity":1,"message":"75","line":91,"column":13,"nodeType":"61","messageId":"62","endLine":91,"endColumn":19},{"ruleId":"59","severity":1,"message":"76","line":92,"column":15,"nodeType":"61","messageId":"62","endLine":92,"endColumn":20},{"ruleId":"59","severity":1,"message":"66","line":165,"column":9,"nodeType":"61","messageId":"62","endLine":165,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":166,"column":21,"nodeType":"69","messageId":"70","endLine":166,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":173,"column":22,"nodeType":"69","messageId":"70","endLine":173,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":184,"column":22,"nodeType":"69","messageId":"70","endLine":184,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":185,"column":24,"nodeType":"69","messageId":"70","endLine":185,"endColumn":26},{"ruleId":"59","severity":1,"message":"77","line":198,"column":3,"nodeType":"61","messageId":"62","endLine":198,"endColumn":10},{"ruleId":"71","severity":1,"message":"78","line":259,"column":6,"nodeType":"73","endLine":259,"endColumn":8,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'cloud' is defined but never used.","'point' is defined but never used.","'arr' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allArrs', 'circleLinesArrs', and 'dataArrs'. Either include them or remove the dependency array.","ArrayExpression",["82"],"'rotate' is assigned a value but never used.","'angle' is assigned a value but never used.","'dataArr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allArr', 'orientationArr', and 'setFlag'. Either include them or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [allArrs, circleLinesArrs, dataArrs]",{"range":"88","text":"89"},"Update the dependencies array to be: [allArr, orientationArr, setFlag]",{"range":"90","text":"91"},[6560,6562],"[allArrs, circleLinesArrs, dataArrs]",[6645,6647],"[allArr, orientationArr, setFlag]"]